:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/2.3

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

[[extended-stats-bucket-aggregation-usage]]
== Extended Stats Bucket Aggregation Usage

=== Fluent DSL Example

[source,csharp]
----
s => s
.Size(0)
.Aggregations(a => a
    .DateHistogram("projects_started_per_month", dh => dh
        .Field(p => p.StartedOn)
        .Interval(DateInterval.Month)
        .Aggregations(aa => aa
            .Sum("commits", sm => sm
                .Field(p => p.NumberOfCommits)
            )
        )
    )
    .ExtendedStatsBucket("extended_stats_commits_per_month", aaa => aaa
        .BucketsPath("projects_started_per_month>commits")
        .Sigma(2)
    )
)
----

=== Object Initializer Syntax Example

[source,csharp]
----
new SearchRequest<Project>()
{
    Size = 0,
    Aggregations = new DateHistogramAggregation("projects_started_per_month")
    {
        Field = "startedOn",
        Interval = DateInterval.Month,
        Aggregations = new SumAggregation("commits", "numberOfCommits")
    }
    && new ExtendedStatsBucketAggregation("extended_stats_commits_per_month", "projects_started_per_month>commits")
    {
        Sigma = 2
    }
}
----

[source,javascript]
.Example json output
----
{
  "size": 0,
  "aggs": {
    "projects_started_per_month": {
      "date_histogram": {
        "field": "startedOn",
        "interval": "month"
      },
      "aggs": {
        "commits": {
          "sum": {
            "field": "numberOfCommits"
          }
        }
      }
    },
    "extended_stats_commits_per_month": {
      "extended_stats_bucket": {
        "buckets_path": "projects_started_per_month>commits",
        "sigma": 2.0
      }
    }
  }
}
----

=== Handling Responses

[source,csharp]
----
response.IsValid.Should().BeTrue();
var projectsPerMonth = response.Aggs.DateHistogram("projects_started_per_month");
projectsPerMonth.Should().NotBeNull();
projectsPerMonth.Buckets.Should().NotBeNull();
projectsPerMonth.Buckets.Count.Should().BeGreaterThan(0);
var commitsStats = response.Aggs.ExtendedStatsBucket("extended_stats_commits_per_month");
commitsStats.Should().NotBeNull();
commitsStats.Average.Should().BeGreaterThan(0);
commitsStats.Max.Should().BeGreaterThan(0);
commitsStats.Min.Should().BeGreaterThan(0);
commitsStats.Count.Should().BeGreaterThan(0);
commitsStats.Sum.Should().BeGreaterThan(0);
commitsStats.SumOfSquares.Should().BeGreaterThan(0);
commitsStats.StdDeviation.Should().BeGreaterThan(0);
commitsStats.StdDeviationBounds.Should().NotBeNull();
commitsStats.StdDeviationBounds.Upper.Should().BeGreaterThan(0);
commitsStats.StdDeviationBounds.Lower.Should().NotBe(0);
----

